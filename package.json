{
    "name": "unityscriptcreator",
    "displayName": "Unity Script Creator",
    "description": "Extension to create Unity C# scripts and other helpful C# extensions for VSCode",
    "author": "Parz1val1",
    "license": "MIT",
    "version": "1.0.0",
    "publisher": "Parz1val1",
    "engines": {
        "vscode": "^1.56.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/Parz1val1/Unity-Script-Creator"
    },
    "icon": "logo.png",
    "categories": [
        "Programming Languages",
        "Linters",
        "Snippets"
    ],
    "keywords": [
        ".NET",
        "Unity",
        "dotnet"
    ],
    "activationEvents": [
        "onLanguage:csharp",
        "onCommand:csharpextensions.createClass"
    ],
    "main": "./dist/extension",
    "contributes": {
        "commands": [
            {
                "command": "csharpextensions.createClass",
                "title": "New Unity C# Script"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "csharpextensions.createClass",
                    "group": "navigation"
                }
            ]
        },
        "configuration": {
            "title": "C# Extensions configuration",
            "properties": {
                "csharpextensions.privateMemberPrefix": {
                    "type": "string",
                    "default": "",
                    "description": "Prefix for generated private member declarations"
                },
                "csharpextensions.useThisForCtorAssignments": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not a ctor assignment of a property or variable should be prefixed with this."
                },
                "csharpextensions.reFormatAfterChange": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, the document will be reformatted after codeactions are used."
                },
                "csharpextensions.includeNamespaces": {
                    "type": "boolean",
                    "default": true,
                    "description": "If created classes should include default namespaces"
                },
                "csharpextensions.useFileScopedNamespace": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use file scoped namespace in .NET 6.0+ projects"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./ && webpack --mode production",
        "compile": "tsc -p ./ && yarn lint",
        "compileDev": "tsc -p ./ && yarn lint && webpack --mode development",
        "watch": "tsc -watch -p ./",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js",
        "package": "vsce package --yarn",
        "publish": "vsce publish --yarn"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/lodash": "^4.14.175",
        "@types/mocha": "^8.0.4",
        "@types/node": "^12.11.7",
        "@types/vscode": "^1.56.0",
        "@types/xml2js": "^0.4.9",
        "@typescript-eslint/eslint-plugin": "^5.17.0",
        "@typescript-eslint/parser": "^5.17.0",
        "@vscode/test-electron": "^2.1.3",
        "eslint": "^7.19.0",
        "glob": "^7.1.6",
        "mocha": "^8.2.1",
        "ts-loader": "^9.2.6",
        "tsc": "^2.0.4",
        "typescript": "^4.6.3",
        "vsce": "^2.6.3",
        "vscode-test": "^1.5.0",
        "webpack": "^5.58.2",
        "webpack-cli": "^4.9.1"
    },
    "dependencies": {
        "find-up-glob": "^1.0.0",
        "lodash": "^4.7.0",
        "xml2js": "^0.4.23"
    }
}